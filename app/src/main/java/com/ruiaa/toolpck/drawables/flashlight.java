package com.ruiaa.toolpck.drawables;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class flashlight extends SVGRenderer {

    public flashlight(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = (int)128.0f;
        mHeight = (int)128.0f;
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        
        final float scaleX = w / 1024.0f;
        final float scaleY = h / 1024.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(471.90277f, 238.28401f);
        mPath.lineTo(471.90277f, 238.28401f);
        mPath.rCubicTo(-7.993045f, 7.993045f, -20.951172f, 7.993045f, -28.943193f, 0.0f);
        mPath.rLineTo(-174.01321f, -174.01321f);
        mPath.rCubicTo(-10.789741f, -10.789741f, -28.284184f, -10.789741f, -39.073925f, 0.0f);
        mPath.lineTo(62.373585f, 231.76964f);
        mPath.rCubicTo(-10.789741f, 10.789741f, -10.789741f, 28.284184f, 0.0f, 39.073925f);
        mPath.rLineTo(175.46017f, 175.46017f);
        mPath.rCubicTo(7.992021f, 7.992021f, 7.992021f, 20.951172f, 0.0f, 28.943193f);
        mPath.rLineTo(0.0f, 0.0f);
        mPath.rCubicTo(-7.992021f, 7.992021f, -20.951172f, 7.992021f, -28.943193f, 0.0f);
        mPath.lineTo(33.43039f, 299.78677f);
        mPath.rCubicTo(-26.774807f, -26.774807f, -26.774807f, -70.1855f, 0.0f, -96.96031f);
        mPath.lineTo(200.92924f, 35.3276f);
        mPath.rCubicTo(26.774807f, -26.774807f, 70.1855f, -26.774807f, 96.96031f, 0.0f);
        mPath.rLineTo(174.01321f, 174.01321f);
        mPath.cubicTo(475.8108f, 222.82903f, 479.8958f, 230.29199f, 471.90277f, 238.28401f);
        mPath.close();
        mPath.moveTo(471.90277f, 238.28401f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(298.85556f, 94.18101f);
        mPath.lineTo(92.2838f, 300.75278f);
        mPath.rCubicTo(-7.992021f, 7.992021f, -20.951172f, 7.992021f, -28.943193f, 0.0f);
        mPath.rLineTo(0.0f, 0.0f);
        mPath.rCubicTo(-7.992021f, -7.992021f, -7.992021f, -20.951172f, 0.0f, -28.943193f);
        mPath.lineTo(269.91235f, 65.237816f);
        mPath.rCubicTo(7.992021f, -7.992021f, 20.951172f, -7.992021f, 28.943193f, 0.0f);
        mPath.rLineTo(0.0f, 0.0f);
        mPath.cubicTo(306.8486f, 73.229836f, 306.8486f, 86.187965f, 298.85556f, 94.18101f);
        mPath.close();
        mPath.moveTo(298.85556f, 94.18101f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(387.83203f, 294.134f);
        mPath.lineTo(238.19601f, 443.77106f);
        mPath.rCubicTo(-7.992021f, 7.992021f, -20.951172f, 7.992021f, -28.943193f, 0.0f);
        mPath.rLineTo(0.0f, 0.0f);
        mPath.rCubicTo(-7.992021f, -7.992021f, -7.992021f, -20.951172f, 0.0f, -28.943193f);
        mPath.rLineTo(149.63704f, -149.63704f);
        mPath.rCubicTo(7.992021f, -7.992021f, 20.951172f, -7.992021f, 28.943193f, 0.0f);
        mPath.rLineTo(0.0f, 0.0f);
        mPath.cubicTo(395.82507f, 273.18283f, 395.82507f, 286.142f, 387.83203f, 294.134f);
        mPath.close();
        mPath.moveTo(387.83203f, 294.134f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(384.03864f, 554.7773f);
        mPath.rLineTo(-168.97241f, -75.04007f);
        mPath.rCubicTo(-10.338463f, -4.570085f, -15.013949f, -16.655333f, -10.443863f, -26.993793f);
        mPath.rLineTo(0.0f, 0.0f);
        mPath.rCubicTo(4.570085f, -10.338463f, 16.655333f, -15.013949f, 26.993793f, -10.443863f);
        mPath.rLineTo(168.97241f, 75.04007f);
        mPath.rCubicTo(10.338463f, 4.570085f, 15.013949f, 16.655333f, 10.443863f, 26.993793f);
        mPath.rLineTo(0.0f, 0.0f);
        mPath.cubicTo(406.46234f, 554.6719f, 394.3771f, 559.34735f, 384.03864f, 554.7773f);
        mPath.close();
        mPath.moveTo(384.03864f, 554.7773f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(550.3177f, 413.03607f);
        mPath.lineTo(550.3177f, 413.03607f);
        mPath.rCubicTo(-10.145058f, 4.985548f, -22.410406f, 0.803295f, -27.39493f, -9.340739f);
        mPath.rLineTo(-84.771706f, -171.51636f);
        mPath.rCubicTo(-4.985548f, -10.144034f, -0.803295f, -22.409382f, 9.341762f, -27.39493f);
        mPath.rLineTo(0.0f, 0.0f);
        mPath.rCubicTo(10.144034f, -4.985548f, 22.409382f, -0.803295f, 27.39493f, 9.341762f);
        mPath.rLineTo(84.771706f, 171.51636f);
        mPath.cubicTo(564.644f, 395.78516f, 560.46173f, 408.0505f, 550.3177f, 413.03607f);
        mPath.close();
        mPath.moveTo(550.3177f, 413.03607f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(991.5182f, 912.56604f);
        mPath.rLineTo(-77.054955f, 77.054955f);
        mPath.rCubicTo(-26.731829f, 26.731829f, -71.68976f, 25.27157f, -100.21647f, -3.25616f);
        mPath.lineTo(380.91345f, 553.0315f);
        mPath.rCubicTo(-8.230452f, -8.230452f, -8.423857f, -21.381983f, -0.431835f, -29.375029f);
        mPath.rLineTo(0.0f, 0.0f);
        mPath.rCubicTo(7.992021f, -7.992021f, 21.144575f, -7.79964f, 29.375029f, 0.431835f);
        mPath.rLineTo(433.33334f, 433.33334f);
        mPath.rCubicTo(12.092409f, 12.092409f, 30.695093f, 13.165858f, 41.467438f, 2.393513f);
        mPath.rLineTo(77.054955f, -77.054955f);
        mPath.rCubicTo(10.772344f, -10.772344f, 9.698896f, -29.374004f, -2.393513f, -41.467438f);
        mPath.lineTo(525.98553f, 407.95944f);
        mPath.rCubicTo(-8.230452f, -8.230452f, -8.423857f, -21.381983f, -0.431835f, -29.375029f);
        mPath.rLineTo(0.0f, 0.0f);
        mPath.rCubicTo(7.992021f, -7.992021f, 21.143553f, -7.79964f, 29.375029f, 0.431835f);
        mPath.lineTo(988.262f, 812.3496f);
        mPath.cubicTo(1016.7898f, 840.8773f, 1018.25104f, 885.8342f, 991.5182f, 912.56604f);
        mPath.close();
        mPath.moveTo(991.5182f, 912.56604f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(482.91354f, 473.78055f);
        mPath.rLineTo(-67.81348f, 67.81348f);
        mPath.rCubicTo(-7.992021f, 7.992021f, -20.951172f, 7.992021f, -28.943193f, 0.0f);
        mPath.rLineTo(0.0f, 0.0f);
        mPath.rCubicTo(-7.992021f, -7.992021f, -7.992021f, -20.951172f, 0.0f, -28.943193f);
        mPath.rLineTo(67.81348f, -67.812454f);
        mPath.rCubicTo(7.992021f, -7.992021f, 20.951172f, -7.992021f, 28.943193f, 0.0f);
        mPath.rLineTo(0.0f, 0.0f);
        mPath.cubicTo(490.90558f, 452.82938f, 490.90558f, 465.7885f, 482.91354f, 473.78055f);
        mPath.close();
        mPath.moveTo(482.91354f, 473.78055f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(639.5224f, 638.7109f);
        mPath.rCubicTo(-13.864776f, 13.864776f, -36.424583f, 13.864776f, -50.28936f, 0.0f);
        mPath.rLineTo(-68.01711f, -68.01711f);
        mPath.rLineTo(14.471596f, -14.471596f);
        mPath.rLineTo(68.01711f, 68.01711f);
        mPath.rCubicTo(5.885034f, 5.885034f, 15.461133f, 5.885034f, 21.346167f, 0.0f);
        mPath.rCubicTo(5.885034f, -5.885034f, 5.885034f, -15.461133f, 0.0f, -21.346167f);
        mPath.rLineTo(-68.01711f, -68.01711f);
        mPath.rLineTo(14.471596f, -14.471596f);
        mPath.rLineTo(68.01711f, 68.01711f);
        mPath.cubicTo(653.38715f, 602.2863f, 653.38715f, 624.8461f, 639.5224f, 638.7109f);
        mPath.close();
        mPath.moveTo(639.5224f, 638.7109f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(561.73676f, 560.9253f);
        mPath.rCubicTo(-17.256012f, 17.256012f, -45.33451f, 17.256012f, -62.590523f, 0.0f);
        mPath.rCubicTo(-17.256012f, -17.256012f, -17.256012f, -45.33451f, 0.0f, -62.590523f);
        mPath.rCubicTo(17.256012f, -17.256012f, 45.33451f, -17.256012f, 62.590523f, 0.0f);
        mPath.cubicTo(578.9928f, 515.59076f, 578.9928f, 543.66925f, 561.73676f, 560.9253f);
        mPath.close();
        mPath.moveTo(561.73676f, 560.9253f);
        mPath.moveTo(513.61786f, 512.80634f);
        mPath.rCubicTo(-9.276271f, 9.276271f, -9.276271f, 24.370037f, 0.0f, 33.64631f);
        mPath.rCubicTo(9.276271f, 9.276271f, 24.370037f, 9.276271f, 33.64631f, 0.0f);
        mPath.rCubicTo(9.276271f, -9.276271f, 9.276271f, -24.370037f, 0.0f, -33.64631f);
        mPath.cubicTo(537.98785f, 503.5301f, 522.89514f, 503.5301f, 513.61786f, 512.80634f);
        mPath.close();
        mPath.moveTo(513.61786f, 512.80634f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(986.0599f, 984.1637f);
        mPath.rCubicTo(-18.419512f, 18.419512f, -48.39113f, 18.419512f, -66.81166f, 0.0f);
        mPath.rLineTo(14.471596f, -14.471596f);
        mPath.rCubicTo(10.440793f, 10.440793f, 27.427675f, 10.440793f, 37.867447f, 0.0f);
        mPath.rCubicTo(10.440793f, -10.440793f, 10.440793f, -27.427675f, 0.0f, -37.86847f);
        mPath.rLineTo(14.471596f, -14.471596f);
        mPath.cubicTo(1004.4804f, 935.77155f, 1004.4804f, 965.74316f, 986.0599f, 984.1637f);
        mPath.close();
        mPath.moveTo(986.0599f, 984.1637f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}