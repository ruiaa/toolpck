package com.ruiaa.toolpck.drawables;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class environment extends SVGRenderer {

    public environment(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(1024.0f);
        mHeight = dip2px(1024.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        
        final float scaleX = w / 1024.0f;
        final float scaleY = h / 1024.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(651.7114f, 654.2788f);
        mPath.cubicTo(800.73596f, 675.7155f, 896.0f, 729.53973f, 896.0f, 763.5282f);
        mPath.cubicTo(896.0f, 813.54175f, 727.2169f, 882.46155f, 512.0f, 882.46155f);
        mPath.cubicTo(296.7831f, 882.46155f, 128.0f, 813.54175f, 128.0f, 763.5282f);
        mPath.cubicTo(128.0f, 729.4693f, 223.3699f, 675.70917f, 372.28873f, 654.279f);
        mPath.cubicTo(397.01962f, 691.1412f, 423.22342f, 727.57184f, 449.42554f, 762.191f);
        mPath.cubicTo(466.34485f, 784.54535f, 479.54553f, 801.2867f, 487.18298f, 810.66895f);
        mPath.lineTo(512.0f, 841.15546f);
        mPath.lineTo(536.817f, 810.66895f);
        mPath.cubicTo(544.45447f, 801.2867f, 557.65515f, 784.54535f, 574.57446f, 762.191f);
        mPath.cubicTo(600.7766f, 727.5718f, 626.98047f, 691.14105f, 651.7114f, 654.2788f);
        mPath.close();
        mPath.moveTo(651.7114f, 654.2788f);
        mPath.moveTo(334.4767f, 595.51904f);
        mPath.cubicTo(175.35666f, 623.5904f, 64.0f, 688.24915f, 64.0f, 763.5282f);
        mPath.cubicTo(64.0f, 864.5595f, 264.57645f, 946.46155f, 512.0f, 946.46155f);
        mPath.cubicTo(759.4236f, 946.46155f, 960.0f, 864.5595f, 960.0f, 763.5282f);
        mPath.cubicTo(960.0f, 688.24915f, 848.6434f, 623.5904f, 689.5233f, 595.51904f);
        mPath.cubicTo(696.30554f, 584.47076f, 702.7874f, 573.5864f, 708.9454f, 562.88715f);
        mPath.cubicTo(755.15564f, 482.5979f, 781.17645f, 416.89938f, 781.17645f, 367.0716f);
        mPath.cubicTo(781.17645f, 217.41965f, 660.7193f, 96.0f, 512.0f, 96.0f);
        mPath.cubicTo(363.28067f, 96.0f, 242.82353f, 217.41965f, 242.82353f, 367.0716f);
        mPath.cubicTo(242.82353f, 416.89938f, 268.84433f, 482.5979f, 315.05463f, 562.88715f);
        mPath.cubicTo(321.21262f, 573.5864f, 327.69446f, 584.47076f, 334.4767f, 595.51904f);
        mPath.close();
        mPath.moveTo(334.4767f, 595.51904f);
        mPath.moveTo(487.18298f, 770.2652f);
        mPath.lineTo(536.817f, 770.2652f);
        mPath.cubicTo(529.631f, 761.43744f, 516.89044f, 745.2797f, 500.45682f, 723.5671f);
        mPath.cubicTo(473.03604f, 687.33777f, 445.61725f, 649.0759f, 420.07434f, 610.5878f);
        mPath.cubicTo(401.78677f, 583.0321f, 385.1426f, 556.3625f, 370.5235f, 530.96216f);
        mPath.cubicTo(329.60593f, 459.8689f, 306.82352f, 402.34686f, 306.82352f, 367.0716f);
        mPath.cubicTo(306.82352f, 252.65236f, 398.74142f, 160.0f, 512.0f, 160.0f);
        mPath.cubicTo(625.25854f, 160.0f, 717.17645f, 252.65236f, 717.17645f, 367.0716f);
        mPath.cubicTo(717.17645f, 402.34686f, 694.3941f, 459.8689f, 653.4765f, 530.96216f);
        mPath.cubicTo(638.8574f, 556.3625f, 622.21326f, 583.0321f, 603.92566f, 610.5878f);
        mPath.cubicTo(578.38275f, 649.0759f, 550.964f, 687.33777f, 523.5432f, 723.5671f);
        mPath.cubicTo(507.10956f, 745.2797f, 494.36905f, 761.43744f, 487.18298f, 770.2652f);
        mPath.lineTo(487.18298f, 770.2652f);
        mPath.close();
        mPath.moveTo(487.18298f, 770.2652f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(512.0f, 416.31604f);
        mPath.lineTo(512.0f, 416.31604f);
        mPath.cubicTo(538.5867f, 416.31604f, 560.34674f, 394.38208f, 560.34674f, 367.0716f);
        mPath.cubicTo(560.34674f, 339.76114f, 538.5867f, 317.82715f, 512.0f, 317.82715f);
        mPath.cubicTo(485.41336f, 317.82715f, 463.65326f, 339.76114f, 463.65326f, 367.0716f);
        mPath.cubicTo(463.65326f, 394.38208f, 485.41336f, 416.31604f, 512.0f, 416.31604f);
        mPath.lineTo(512.0f, 416.31604f);
        mPath.close();
        mPath.moveTo(512.0f, 416.31604f);
        mPath.moveTo(512.0f, 480.31604f);
        mPath.lineTo(512.0f, 480.31604f);
        mPath.cubicTo(449.9526f, 480.31604f, 399.65326f, 429.61478f, 399.65326f, 367.0716f);
        mPath.cubicTo(399.65326f, 304.5284f, 449.9526f, 253.82716f, 512.0f, 253.82716f);
        mPath.cubicTo(574.0474f, 253.82716f, 624.34674f, 304.5284f, 624.34674f, 367.0716f);
        mPath.cubicTo(624.34674f, 429.61478f, 574.0474f, 480.31604f, 512.0f, 480.31604f);
        mPath.lineTo(512.0f, 480.31604f);
        mPath.close();
        mPath.moveTo(512.0f, 480.31604f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}