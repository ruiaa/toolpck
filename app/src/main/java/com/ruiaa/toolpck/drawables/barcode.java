package com.ruiaa.toolpck.drawables;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class barcode extends SVGRenderer {

    public barcode(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = (int)128.0f;
        mHeight = (int)128.0f;
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        
        final float scaleX = w / 1024.0f;
        final float scaleY = h / 1024.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(153.615f, 205.269f);
        mPath.rLineTo(92.669f, 0f);
        mPath.rLineTo(0f, 614.689f);
        mPath.rLineTo(-92.669f, 0f);
        mPath.rLineTo(0f, -614.689f);
        mPath.moveTo(153.615f, 205.269f);
        mPath.rLineTo(0f, 0.0f);
        mPath.close();
        mPath.moveTo(153.615f, 205.269f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(276.49f, 205.269f);
        mPath.rLineTo(43.572f, 0f);
        mPath.rLineTo(0f, 614.689f);
        mPath.rLineTo(-43.572f, 0f);
        mPath.rLineTo(0f, -614.689f);
        mPath.moveTo(276.49f, 205.269f);
        mPath.rLineTo(0f, 0.0f);
        mPath.close();
        mPath.moveTo(276.49f, 205.269f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(376.738f, 205.269f);
        mPath.rLineTo(54.834f, 0f);
        mPath.rLineTo(0f, 614.689f);
        mPath.rLineTo(-54.834f, 0f);
        mPath.rLineTo(0f, -614.689f);
        mPath.moveTo(376.738f, 205.269f);
        mPath.rLineTo(0f, 0.0f);
        mPath.close();
        mPath.moveTo(376.738f, 205.269f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(533.712f, 205.269f);
        mPath.rLineTo(94.614f, 0f);
        mPath.rLineTo(0f, 614.689f);
        mPath.rLineTo(-94.614f, 0f);
        mPath.rLineTo(0f, -614.689f);
        mPath.moveTo(533.712f, 205.269f);
        mPath.rLineTo(0f, 0.0f);
        mPath.close();
        mPath.moveTo(533.712f, 205.269f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(652.849f, 205.269f);
        mPath.rLineTo(35.995f, 0f);
        mPath.rLineTo(0f, 614.689f);
        mPath.rLineTo(-35.995f, 0f);
        mPath.rLineTo(0f, -614.689f);
        mPath.moveTo(652.849f, 205.269f);
        mPath.rLineTo(0f, 0.0f);
        mPath.close();
        mPath.moveTo(652.849f, 205.269f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(745.57f, 205.269f);
        mPath.rLineTo(124.824f, 0f);
        mPath.rLineTo(0f, 614.689f);
        mPath.rLineTo(-124.824f, 0f);
        mPath.rLineTo(0f, -614.689f);
        mPath.moveTo(745.57f, 205.269f);
        mPath.rLineTo(0f, 0.0f);
        mPath.close();
        mPath.moveTo(745.57f, 205.269f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}