package com.ruiaa.toolpck.drawables;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class personaltax extends SVGRenderer {

    public personaltax(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = (int)128.0f;
        mHeight = (int)128.0f;
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        
        final float scaleX = w / 1024.0f;
        final float scaleY = h / 1024.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(514.8723f, 18.18624f);
        mPath.cubicTo(242.14528f, 18.18624f, 21.05856f, 239.27296f, 21.05856f, 512.0f);
        mPath.rCubicTo(0.0f, 272.72705f, 221.08672f, 493.81375f, 493.81375f, 493.81375f);
        mPath.rCubicTo(272.72705f, 0.0f, 493.81375f, -221.08672f, 493.81375f, -493.81375f);
        mPath.rCubicTo(0.0f, -272.72702f, -221.09184f, -493.81375f, -493.81375f, -493.81375f);
        mPath.close();
        mPath.moveTo(514.8723f, 18.18624f);
        mPath.rMoveTo(0.0f, 943.2525f);
        mPath.rCubicTo(-248.2176f, 0.0f, -449.43872f, -201.22112f, -449.43872f, -449.43872f);
        mPath.rCubicTo(0.0f, -248.21759f, 201.22112f, -449.43872f, 449.43872f, -449.43872f);
        mPath.cubicTo(763.0899f, 62.56128f, 964.31104f, 263.7824f, 964.31104f, 512.0f);
        mPath.rCubicTo(0.0f, 248.21759f, -201.22112f, 449.43872f, -449.43872f, 449.43872f);
        mPath.close();
        mPath.moveTo(514.8723f, 961.4387f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(240.85504f, 630.90686f);
        mPath.rCubicTo(36.23424f, -61.12256f, 62.9504f, -125.5424f, 80.15872f, -193.2544f);
        mPath.lineTo(252.93312f, 437.65247f);
        mPath.rLineTo(0f, -37.33504f);
        mPath.rLineTo(75.2128f, 0f);
        mPath.rLineTo(0f, -79.0528f);
        mPath.rCubicTo(-21.9648f, 1.82784f, -44.84096f, 3.6608f, -68.62848f, 5.48864f);
        mPath.cubicTo(257.79926f, 313.7445f, 255.04619f, 300.89352f, 251.2845f, 288.32254f);
        mPath.rCubicTo(67.34336f, -3.29728f, 128.83456f, -9.14944f, 184.46848f, -17.57184f);
        mPath.rLineTo(8.7808f, 37.33504f);
        mPath.cubicTo(418.60104f, 311.63635f, 392.60986f, 314.74634f, 366.57153f, 317.4144f);
        mPath.rLineTo(0f, 82.89792f);
        mPath.rLineTo(73.02144f, 0f);
        mPath.rLineTo(0f, 37.33504f);
        mPath.rLineTo(-73.0112f, 0f);
        mPath.rLineTo(0f, 48.86528f);
        mPath.rLineTo(23.60832f, -15.9232f);
        mPath.cubicTo(408.7629f, 496.25848f, 426.34427f, 522.6305f, 442.89536f, 549.64734f);
        mPath.rLineTo(-34.03776f, 21.95968f);
        mPath.cubicTo(395.73795f, 547.075f, 381.63455f, 523.082f, 366.58176f, 499.68634f);
        mPath.rLineTo(0f, 278.3488f);
        mPath.rLineTo(-38.43072f, 0f);
        mPath.rLineTo(0f, -261.3248f);
        mPath.rCubicTo(-17.93536f, 60.75904f, -40.6272f, 114.56512f, -68.07552f, 161.408f);
        mPath.cubicTo(254.01031f, 662.2442f, 247.60199f, 646.50336f, 240.85503f, 630.9068f);
        mPath.close();
        mPath.moveTo(240.85504f, 630.90686f);
        mPath.rMoveTo(216.86272f, -284.94336f);
        mPath.rLineTo(293.72415f, 0f);
        mPath.rLineTo(0f, 220.15488f);
        mPath.rLineTo(-40.6272f, 0f);
        mPath.rLineTo(0f, -20.31616f);
        mPath.rLineTo(-49.96096f, 0f);
        mPath.rLineTo(0f, 150.43073f);
        mPath.rCubicTo(0.0f, 20.49536f, 8.96512f, 30.7456f, 26.90048f, 30.7456f);
        mPath.rLineTo(17.57184f, 0f);
        mPath.rCubicTo(17.93536f, 0.0f, 28.00128f, -9.8816f, 30.19264f, -29.6448f);
        mPath.rCubicTo(1.82784f, -19.7632f, 3.29728f, -43.37152f, 4.39296f, -70.82496f);
        mPath.rCubicTo(11.34592f, 5.13024f, 25.06752f, 10.9824f, 41.17504f, 17.57184f);
        mPath.rCubicTo(-2.56512f, 28.54912f, -5.30944f, 52.70528f, -8.23296f, 72.46848f);
        mPath.rCubicTo(-5.12512f, 33.66912f, -24.88832f, 50.5088f, -59.29472f, 50.5088f);
        mPath.rLineTo(-37.33504f, 0f);
        mPath.rCubicTo(-37.32992f, 0.0f, -56.00256f, -20.85888f, -56.00256f, -62.592f);
        mPath.rLineTo(0f, -158.66368f);
        mPath.rLineTo(-45.01504f, 0f);
        mPath.rCubicTo(-1.1008f, 108.3392f, -46.6688f, 186.12224f, -136.70912f, 233.33376f);
        mPath.rCubicTo(-6.95808f, -12.07808f, -15.744f, -24.704f, -26.35264f, -37.88288f);
        mPath.rCubicTo(80.88576f, -38.06208f, 121.69728f, -103.21408f, 122.42944f, -195.45088f);
        mPath.rLineTo(-36.23424f, 0f);
        mPath.rLineTo(0f, 20.31616f);
        mPath.rLineTo(-40.6272f, 0f);
        mPath.lineTo(457.71265f, 345.96353f);
        mPath.close();
        mPath.moveTo(457.71777f, 345.9635f);
        mPath.rMoveTo(23.05536f, -82.3552f);
        mPath.rLineTo(34.59072f, -19.21536f);
        mPath.rCubicTo(21.22752f, 24.88832f, 39.89504f, 49.41312f, 56.00256f, 73.56928f);
        mPath.rLineTo(-37.33504f, 22.50752f);
        mPath.rCubicTo(-15.00672f, -25.25184f, -32.76288f, -50.8672f, -53.25824f, -76.86144f);
        mPath.close();
        mPath.moveTo(480.77313f, 263.6083f);
        mPath.rMoveTo(230.0416f, 120.78592f);
        mPath.lineTo(498.34497f, 384.39423f);
        mPath.rLineTo(0f, 122.9824f);
        mPath.rLineTo(212.46976f, 0f);
        mPath.rLineTo(0f, -122.9824f);
        mPath.close();
        mPath.moveTo(710.8147f, 384.39423f);
        mPath.rMoveTo(13.17376f, -122.42944f);
        mPath.rCubicTo(-17.56672f, 26.72128f, -36.9664f, 53.80608f, -58.19392f, 81.2544f);
        mPath.rLineTo(-35.6864f, -21.41184f);
        mPath.rCubicTo(25.25696f, -29.64992f, 44.09856f, -56.00256f, 56.5504f, -79.05792f);
        mPath.rLineTo(37.32992f, 19.21536f);
        mPath.close();
        mPath.moveTo(723.98846f, 261.96478f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}