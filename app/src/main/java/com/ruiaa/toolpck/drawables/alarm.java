package com.ruiaa.toolpck.drawables;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class alarm extends SVGRenderer {

    public alarm(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(1024.0f);
        mHeight = dip2px(1024.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        
        final float scaleX = w / 1024.0f;
        final float scaleY = h / 1024.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(830.1668f, 866.71027f);
        mPath.rCubicTo(103.927f, -88.80247f, 170.10783f, -219.94171f, 170.10783f, -366.35196f);
        mPath.rCubicTo(0.0f, -71.849365f, -16.302492f, -139.85977f, -44.76846f, -201.25905f);
        mPath.rLineTo(1.746732f, -1.733598f);
        mPath.rCubicTo(57.21885f, -56.79555f, 57.21885f, -149.15816f, 0.0f, -205.9537f);
        mPath.rCubicTo(-27.736565f, -27.496122f, -64.622f, -42.649956f, -103.856285f, -42.649956f);
        mPath.rLineTo(-0.035359f, 0.0f);
        mPath.rCubicTo(-35.07708f, 0.0f, -67.86694f, 12.695881f, -94.301285f, 34.871998f);
        mPath.rCubicTo(-72.53533f, -42.371124f, -156.69568f, -67.12845f, -246.80035f, -67.12845f);
        mPath.rCubicTo(-90.09963f, 0.0f, -174.29533f, 24.75732f, -246.80035f, 67.15875f);
        mPath.rCubicTo(-26.469704f, -22.207436f, -59.254513f, -34.902306f, -94.33665f, -34.902306f);
        mPath.rCubicTo(-39.23024f, 0.0f, -76.12073f, 15.153832f, -103.85224f, 42.649956f);
        mPath.rCubicTo(-57.25825f, 56.79555f, -57.25825f, 149.1925f, 0.0f, 205.9537f);
        mPath.rLineTo(1.742691f, 1.733598f);
        mPath.rCubicTo(-28.460917f, 61.398277f, -44.76846f, 129.40968f, -44.76846f, 201.25905f);
        mPath.rCubicTo(0.0f, 147.5468f, 67.137535f, 279.66296f, 172.49203f, 368.4927f);
        mPath.rLineTo(-97.88668f, 97.052216f);
        mPath.rCubicTo(-12.709014f, 12.603947f, -12.709014f, 33.01616f, 0.0f, 45.611015f);
        mPath.rCubicTo(6.354507f, 6.301974f, 14.673961f, 9.454981f, 23.002506f, 9.454981f);
        mPath.rCubicTo(8.323495f, 0.0f, 16.648f, -3.153007f, 22.997456f, -9.454981f);
        mPath.rLineTo(104.852394f, -103.94822f);
        mPath.rCubicTo(75.90251f, 48.261925f, 165.87587f, 76.64f, 262.5573f, 76.64f);
        mPath.rCubicTo(97.85638f, 0.0f, 188.91676f, -28.9812f, 265.38705f, -78.33925f);
        mPath.rLineTo(106.595085f, 105.64747f);
        mPath.rCubicTo(6.354507f, 6.301974f, 14.678002f, 9.454981f, 23.002506f, 9.454981f);
        mPath.rCubicTo(8.323495f, 0.0f, 16.648f, -3.153007f, 23.006548f, -9.454981f);
        mPath.rCubicTo(12.709014f, -12.594855f, 12.709014f, -33.00707f, 0.0f, -45.611015f);
        mPath.lineTo(830.1668f, 866.71027f);
        mPath.close();
        mPath.moveTo(830.1668f, 866.71027f);
        mPath.moveTo(911.2449f, 137.02701f);
        mPath.rCubicTo(27.740604f, 27.505217f, 31.269426f, 70.02788f, 10.774375f, 101.43268f);
        mPath.rCubicTo(-28.718533f, -44.008747f, -64.30276f, -83.103615f, -105.45046f, -115.73083f);
        mPath.cubicTo(847.1997f, 107.981155f, 886.49567f, 112.51821f, 911.2449f, 137.02701f);
        mPath.close();
        mPath.moveTo(911.2449f, 137.02701f);
        mPath.moveTo(113.27136f, 137.02701f);
        mPath.rCubicTo(24.71792f, -24.569412f, 64.08455f, -29.107481f, 94.71145f, -14.333505f);
        mPath.rCubicTo(-41.147705f, 32.66257f, -76.762245f, 71.75744f, -105.47673f, 115.79649f);
        mPath.cubicTo(81.98071f, 207.0559f, 85.50044f, 164.55849f, 113.27136f, 137.02701f);
        mPath.close();
        mPath.moveTo(113.27136f, 137.02701f);
        mPath.moveTo(512.2606f, 919.6931f);
        mPath.rCubicTo(-233.20535f, 0.0f, -422.94244f, -188.12169f, -422.94244f, -419.33585f);
        mPath.rCubicTo(0.0f, -231.22223f, 189.7381f, -419.33585f, 422.94244f, -419.33585f);
        mPath.rCubicTo(233.20435f, 0.0f, 422.9475f, 188.11362f, 422.9475f, 419.33585f);
        mPath.cubicTo(935.20715f, 731.5715f, 745.46497f, 919.6931f, 512.2606f, 919.6931f);
        mPath.close();
        mPath.moveTo(512.2606f, 919.6931f);
        mPath.moveTo(674.92993f, 468.09683f);
        mPath.lineTo(544.7959f, 468.09683f);
        mPath.lineTo(544.7959f, 242.30371f);
        mPath.rCubicTo(0.0f, -17.826967f, -14.55172f, -32.256447f, -32.53528f, -32.256447f);
        mPath.rCubicTo(-17.979517f, 0.0f, -32.53124f, 14.429479f, -32.53124f, 32.256447f);
        mPath.rLineTo(0.0f, 258.0546f);
        mPath.rCubicTo(0.0f, 17.826967f, 14.55172f, 32.251396f, 32.53124f, 32.251396f);
        mPath.rLineTo(162.67032f, 0.0f);
        mPath.rCubicTo(17.984568f, 0.0f, 32.53528f, -14.425438f, 32.53528f, -32.251396f);
        mPath.cubicTo(707.4662f, 482.5323f, 692.91455f, 468.09683f, 674.92993f, 468.09683f);
        mPath.close();
        mPath.moveTo(674.92993f, 468.09683f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}