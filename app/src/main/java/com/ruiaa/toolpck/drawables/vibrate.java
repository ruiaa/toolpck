package com.ruiaa.toolpck.drawables;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class vibrate extends SVGRenderer {

    public vibrate(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = (int)128.0f;
        mHeight = (int)128.0f;
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        
        final float scaleX = w / 1024.0f;
        final float scaleY = h / 1024.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(706.56f, 102.4f);
        mPath.lineTo(317.44f, 102.4f);
        mPath.cubicTo(293.54666f, 102.4f, 273.06668f, 122.88f, 273.06668f, 148.48f);
        mPath.rLineTo(0f, 728.74664f);
        mPath.rCubicTo(0.0f, 25.6f, 20.48f, 46.08f, 44.373333f, 46.08f);
        mPath.rLineTo(389.12f, 0f);
        mPath.rCubicTo(23.893333f, 0.0f, 44.373333f, -20.48f, 44.373333f, -46.08f);
        mPath.lineTo(750.93335f, 148.48f);
        mPath.cubicTo(750.93335f, 122.88f, 730.4533f, 102.4f, 706.56f, 102.4f);
        mPath.close();
        mPath.moveTo(706.56f, 102.4f);
        mPath.rMoveTo(0.0f, 713.38666f);
        mPath.rCubicTo(0.0f, 17.066668f, -13.653333f, 30.72f, -30.72f, 30.72f);
        mPath.lineTo(348.16f, 846.50665f);
        mPath.rCubicTo(-17.066668f, 0.0f, -30.72f, -13.653333f, -30.72f, -30.72f);
        mPath.lineTo(317.44f, 208.21333f);
        mPath.rCubicTo(0.0f, -17.066668f, 13.653333f, -30.72f, 30.72f, -30.72f);
        mPath.rLineTo(329.38666f, 0f);
        mPath.rCubicTo(17.066668f, 0.0f, 30.72f, 13.653333f, 30.72f, 30.72f);
        mPath.rLineTo(0f, 607.57336f);
        mPath.close();
        mPath.moveTo(706.56f, 815.7867f);
        mPath.moveTo(853.3333f, 307.2f);
        mPath.rLineTo(-17.066666f, 0f);
        mPath.rCubicTo(-10.24f, 0.0f, -17.066668f, 6.826667f, -17.066668f, 17.066668f);
        mPath.rLineTo(0f, 409.6f);
        mPath.rCubicTo(0.0f, 10.24f, 6.826667f, 17.066668f, 17.066668f, 17.066666f);
        mPath.rLineTo(17.066666f, 0f);
        mPath.rCubicTo(10.24f, 0.0f, 17.066668f, -6.826667f, 17.066668f, -17.066666f);
        mPath.lineTo(870.39996f, 324.26666f);
        mPath.rCubicTo(0.0f, -10.24f, -6.826667f, -17.066668f, -17.066668f, -17.066668f);
        mPath.close();
        mPath.moveTo(853.3333f, 307.2f);
        mPath.rMoveTo(102.4f, 51.2f);
        mPath.rLineTo(-17.066666f, 0f);
        mPath.rCubicTo(-10.24f, 0.0f, -17.066668f, 6.826667f, -17.066668f, 17.066668f);
        mPath.rLineTo(0f, 307.2f);
        mPath.rCubicTo(0.0f, 10.24f, 6.826667f, 17.066668f, 17.066668f, 17.066666f);
        mPath.rLineTo(17.066666f, 0f);
        mPath.rCubicTo(10.24f, 0.0f, 17.066668f, -6.826667f, 17.066668f, -17.066666f);
        mPath.lineTo(972.8f, 375.46667f);
        mPath.rCubicTo(0.0f, -10.24f, -6.826667f, -17.066668f, -17.066668f, -17.066668f);
        mPath.close();
        mPath.moveTo(955.73334f, 358.40002f);
        mPath.rMoveTo(-768.0f, -51.2f);
        mPath.rLineTo(-17.066666f, 0f);
        mPath.rCubicTo(-10.24f, 0.0f, -17.066668f, 6.826667f, -17.066668f, 17.066668f);
        mPath.rLineTo(0f, 409.6f);
        mPath.rCubicTo(0.0f, 10.24f, 6.826667f, 17.066668f, 17.066668f, 17.066666f);
        mPath.rLineTo(17.066666f, 0f);
        mPath.rCubicTo(10.24f, 0.0f, 17.066668f, -6.826667f, 17.066668f, -17.066666f);
        mPath.lineTo(204.8f, 324.26666f);
        mPath.rCubicTo(0.0f, -10.24f, -6.826667f, -17.066668f, -17.066668f, -17.066668f);
        mPath.close();
        mPath.moveTo(187.73334f, 307.2f);
        mPath.rMoveTo(-102.4f, 51.2f);
        mPath.lineTo(68.26667f, 358.40002f);
        mPath.rCubicTo(-10.24f, 0.0f, -17.066668f, 6.826667f, -17.066668f, 17.066668f);
        mPath.rLineTo(0f, 307.2f);
        mPath.rCubicTo(0.0f, 10.24f, 6.826667f, 17.066668f, 17.066668f, 17.066666f);
        mPath.rLineTo(17.066666f, 0f);
        mPath.rCubicTo(10.24f, 0.0f, 17.066668f, -6.826667f, 17.066668f, -17.066666f);
        mPath.lineTo(102.4f, 375.46667f);
        mPath.rCubicTo(0.0f, -10.24f, -6.826667f, -17.066668f, -17.066668f, -17.066668f);
        mPath.close();
        mPath.moveTo(85.333336f, 358.40002f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}