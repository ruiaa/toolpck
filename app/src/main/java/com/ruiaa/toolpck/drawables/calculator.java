package com.ruiaa.toolpck.drawables;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class calculator extends SVGRenderer {

    public calculator(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(1119.0f);
        mHeight = dip2px(1024.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        
        final float scaleX = w / 1119.0f;
        final float scaleY = h / 1024.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(426.0905f, 653.73566f);
        mPath.rLineTo(51.30569f, -51.30569f);
        mPath.rCubicTo(9.216424f, -9.216424f, 9.35168f, -24.641218f, -0.078247f, -34.07338f);
        mPath.rCubicTo(-9.496996f, -9.496996f, -24.68593f, -9.465697f, -34.07338f, -0.078247f);
        mPath.rLineTo(-51.30569f, 51.30569f);
        mPath.rLineTo(-51.30569f, -51.30569f);
        mPath.rCubicTo(-9.216424f, -9.216424f, -24.642336f, -9.35168f, -34.074497f, 0.078247f);
        mPath.rCubicTo(-9.496996f, 9.496996f, -9.465697f, 24.684813f, -0.078247f, 34.07338f);
        mPath.rLineTo(51.30569f, 51.30569f);
        mPath.rLineTo(-51.30569f, 51.30569f);
        mPath.rCubicTo(-9.216424f, 9.216424f, -9.35168f, 24.642336f, 0.078247f, 34.074497f);
        mPath.rCubicTo(9.496996f, 9.496996f, 24.68705f, 9.465697f, 34.074497f, 0.078247f);
        mPath.rLineTo(51.30569f, -51.30569f);
        mPath.rLineTo(51.30569f, 51.30569f);
        mPath.rCubicTo(9.216424f, 9.216424f, 24.641218f, 9.35168f, 34.07338f, -0.078247f);
        mPath.rCubicTo(9.496996f, -9.496996f, 9.465697f, -24.68705f, 0.078247f, -34.074497f);
        mPath.lineTo(426.0905f, 653.73566f);
        mPath.close();
        mPath.moveTo(426.0905f, 653.73566f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(486.93008f, 265.63757f);
        mPath.rLineTo(-72.5588f, 0.0f);
        mPath.rLineTo(0.0f, -72.55768f);
        mPath.rCubicTo(0.0f, -13.033778f, -10.811552f, -24.038713f, -24.149378f, -24.038713f);
        mPath.rCubicTo(-13.429486f, 0.0f, -24.149378f, 10.762368f, -24.149378f, 24.038713f);
        mPath.rLineTo(0.0f, 72.55768f);
        mPath.rLineTo(-72.55768f, 0.0f);
        mPath.rCubicTo(-13.033778f, 0.0f, -24.038713f, 10.811552f, -24.038713f, 24.149378f);
        mPath.rCubicTo(0.0f, 13.430604f, 10.762368f, 24.149378f, 24.038713f, 24.149378f);
        mPath.rLineTo(72.55768f, 0.0f);
        mPath.rLineTo(0.0f, 72.55768f);
        mPath.rCubicTo(0.0f, 13.033778f, 10.81267f, 24.038713f, 24.149378f, 24.038713f);
        mPath.rCubicTo(13.430604f, 0.0f, 24.149378f, -10.762368f, 24.149378f, -24.038713f);
        mPath.rLineTo(0.0f, -72.55768f);
        mPath.rLineTo(72.5588f, 0.0f);
        mPath.rCubicTo(13.033778f, 0.0f, 24.036478f, -10.811552f, 24.036478f, -24.149378f);
        mPath.cubicTo(510.96768f, 276.35522f, 500.20645f, 265.63757f, 486.93008f, 265.63757f);
        mPath.close();
        mPath.moveTo(486.93008f, 265.63757f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(897.3689f, 0.0f);
        mPath.lineTo(221.16176f, 0.0f);
        mPath.rCubicTo(-79.99453f, 0.0f, -144.8739f, 64.86149f, -144.8739f, 144.8739f);
        mPath.rLineTo(0.0f, 676.20715f);
        mPath.rCubicTo(0.0f, 79.99453f, 64.86372f, 144.8739f, 144.8739f, 144.8739f);
        mPath.rLineTo(676.20715f, 0.0f);
        mPath.rCubicTo(79.99565f, 0.0f, 144.8739f, -64.86149f, 144.8739f, -144.8739f);
        mPath.lineTo(1042.2428f, 144.8739f);
        mPath.cubicTo(1042.2428f, 64.87937f, 977.38135f, 0.0f, 897.3689f, 0.0f);
        mPath.close();
        mPath.moveTo(897.3689f, 0.0f);
        mPath.moveTo(993.9452f, 821.2991f);
        mPath.rCubicTo(0.0f, 53.21828f, -43.110954f, 96.3583f, -96.3583f, 96.3583f);
        mPath.lineTo(220.94377f, 917.65735f);
        mPath.rCubicTo(-53.216045f, 0.0f, -96.3583f, -43.110954f, -96.3583f, -96.3583f);
        mPath.lineTo(124.58548f, 144.65593f);
        mPath.rCubicTo(0.0f, -53.21828f, 43.112072f, -96.3583f, 96.3583f, -96.3583f);
        mPath.rLineTo(676.6431f, 0.0f);
        mPath.rCubicTo(53.21828f, 0.0f, 96.3583f, 43.110954f, 96.3583f, 96.3583f);
        mPath.lineTo(993.9452f, 821.2991f);
        mPath.close();
        mPath.moveTo(993.9452f, 821.2991f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(873.3123f, 265.63757f);
        mPath.lineTo(679.8993f, 265.63757f);
        mPath.rCubicTo(-13.033778f, 0.0f, -24.038713f, 10.811552f, -24.038713f, 24.149378f);
        mPath.rCubicTo(0.0f, 13.430604f, 10.762368f, 24.149378f, 24.038713f, 24.149378f);
        mPath.rLineTo(193.41411f, 0.0f);
        mPath.rCubicTo(13.033778f, 0.0f, 24.036478f, -10.811552f, 24.036478f, -24.149378f);
        mPath.cubicTo(897.3499f, 276.35522f, 886.5887f, 265.63757f, 873.3123f, 265.63757f);
        mPath.close();
        mPath.moveTo(873.3123f, 265.63757f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(776.6053f, 724.4668f);
        mPath.rMoveTo(-24.149378f, 0.0f);
        mPath.cubicTo(752.4397f, 729.57635f, 754.0455f, 734.5616f, 757.0409f, 738.701f);
        mPath.cubicTo(760.0364f, 742.84045f, 764.2696f, 745.9243f, 769.1281f, 747.50635f);
        mPath.cubicTo(773.9866f, 749.08844f, 779.22406f, 749.08844f, 784.0825f, 747.50635f);
        mPath.cubicTo(788.94104f, 745.9243f, 793.17426f, 742.84045f, 796.16974f, 738.701f);
        mPath.cubicTo(799.16516f, 734.5616f, 800.77094f, 729.57635f, 800.7547f, 724.4668f);
        mPath.cubicTo(800.77094f, 719.35724f, 799.16516f, 714.372f, 796.16974f, 710.2326f);
        mPath.cubicTo(793.17426f, 706.09314f, 788.94104f, 703.0093f, 784.0825f, 701.42725f);
        mPath.cubicTo(779.22406f, 699.84515f, 773.9866f, 699.84515f, 769.1281f, 701.42725f);
        mPath.cubicTo(764.2696f, 703.0093f, 760.0364f, 706.09314f, 757.0409f, 710.2326f);
        mPath.cubicTo(754.0455f, 714.372f, 752.4397f, 719.35724f, 752.45593f, 724.4668f);
        mPath.close();
        mPath.moveTo(752.45593f, 724.4668f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(776.6053f, 579.57275f);
        mPath.rMoveTo(-24.149378f, 0.0f);
        mPath.cubicTo(752.4397f, 584.6823f, 754.0455f, 589.66754f, 757.0409f, 593.80695f);
        mPath.cubicTo(760.0364f, 597.9464f, 764.2696f, 601.0303f, 769.1281f, 602.6123f);
        mPath.cubicTo(773.9866f, 604.1944f, 779.22406f, 604.1944f, 784.0825f, 602.6123f);
        mPath.cubicTo(788.94104f, 601.0303f, 793.17426f, 597.9464f, 796.16974f, 593.80695f);
        mPath.cubicTo(799.16516f, 589.66754f, 800.77094f, 584.6823f, 800.7547f, 579.57275f);
        mPath.cubicTo(800.77094f, 574.4632f, 799.16516f, 569.47797f, 796.16974f, 565.33856f);
        mPath.cubicTo(793.17426f, 561.1991f, 788.94104f, 558.11523f, 784.0825f, 556.5332f);
        mPath.cubicTo(779.22406f, 554.9511f, 773.9866f, 554.9511f, 769.1281f, 556.5332f);
        mPath.cubicTo(764.2696f, 558.11523f, 760.0364f, 561.1991f, 757.0409f, 565.33856f);
        mPath.cubicTo(754.0455f, 569.47797f, 752.4397f, 574.4632f, 752.45593f, 579.57275f);
        mPath.close();
        mPath.moveTo(752.45593f, 579.57275f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(873.3123f, 627.8704f);
        mPath.lineTo(679.8993f, 627.8704f);
        mPath.rCubicTo(-13.033778f, 0.0f, -24.038713f, 10.811552f, -24.038713f, 24.149378f);
        mPath.rCubicTo(0.0f, 13.430604f, 10.762368f, 24.149378f, 24.038713f, 24.149378f);
        mPath.rLineTo(193.41411f, 0.0f);
        mPath.rCubicTo(13.033778f, 0.0f, 24.036478f, -10.811552f, 24.036478f, -24.149378f);
        mPath.cubicTo(897.3499f, 638.5892f, 886.5887f, 627.8704f, 873.3123f, 627.8704f);
        mPath.close();
        mPath.moveTo(873.3123f, 627.8704f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}