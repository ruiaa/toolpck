package com.ruiaa.toolpck.drawables;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class compass extends SVGRenderer {

    public compass(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = (int)128.0f;
        mHeight = (int)128.0f;
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        
        final float scaleX = w / 1024.0f;
        final float scaleY = h / 1024.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(1024.0f, 512.0f);
        mPath.rCubicTo(0.0f, -282.76364f, -229.23636f, -512.0f, -512.0f, -512.0f);
        mPath.cubicTo(229.23636f, 0.0f, 0.0f, 229.23636f, 0.0f, 512.0f);
        mPath.rCubicTo(0.0f, 282.76364f, 229.23636f, 512.0f, 512.0f, 512.0f);
        mPath.cubicTo(794.7636f, 1024.0f, 1024.0f, 794.7636f, 1024.0f, 512.0f);
        mPath.close();
        mPath.moveTo(1024.0f, 512.0f);
        mPath.moveTo(46.545456f, 512.0f);
        mPath.cubicTo(46.545456f, 254.92946f, 254.92946f, 46.545456f, 512.0f, 46.545456f);
        mPath.rCubicTo(257.07056f, 0.0f, 465.45456f, 208.384f, 465.45456f, 465.45456f);
        mPath.rCubicTo(0.0f, 257.07056f, -208.384f, 465.45456f, -465.45456f, 465.45456f);
        mPath.cubicTo(254.92946f, 977.4545f, 46.545456f, 769.07056f, 46.545456f, 512.0f);
        mPath.close();
        mPath.moveTo(46.545456f, 512.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(594.29236f, 429.70764f);
        mPath.lineTo(265.1229f, 265.216f);
        mPath.rLineTo(164.58473f, 329.07635f);
        mPath.rLineTo(329.07635f, 164.58473f);
        mPath.lineTo(594.29236f, 429.70764f);
        mPath.close();
        mPath.moveTo(594.29236f, 429.70764f);
        mPath.moveTo(467.08365f, 558.7316f);
        mPath.lineTo(340.75928f, 342.528f);
        mPath.rLineTo(216.71564f, 124.36945f);
        mPath.lineTo(467.08365f, 558.7316f);
        mPath.close();
        mPath.moveTo(467.08365f, 558.7316f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}