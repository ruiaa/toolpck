package com.ruiaa.toolpck.drawables;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ruler extends SVGRenderer {

    public ruler(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = (int)128.0f;
        mHeight = (int)128.0f;
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        
        final float scaleX = w / 1024.0f;
        final float scaleY = h / 1024.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(307.50674f, 1022.4663f);
        mPath.rLineTo(0.0f, -1022.4663f);
        mPath.rLineTo(406.43036f, 0.0f);
        mPath.rLineTo(0.0f, 1022.4663f);
        mPath.lineTo(307.50674f, 1022.4663f);
        mPath.lineTo(307.50674f, 1022.4663f);
        mPath.close();
        mPath.moveTo(307.50674f, 1022.4663f);
        mPath.moveTo(337.6695f, 992.3035f);
        mPath.rLineTo(346.10483f, 0.0f);
        mPath.rLineTo(0.0f, -962.1408f);
        mPath.rLineTo(-346.10483f, 0.0f);
        mPath.rLineTo(0.0f, 96.11183f);
        mPath.rLineTo(106.336494f, 0.0f);
        mPath.rLineTo(0.0f, 30.162756f);
        mPath.rLineTo(-106.336494f, 0.0f);
        mPath.rLineTo(0.0f, 93.04443f);
        mPath.rLineTo(214.71793f, 0.0f);
        mPath.rLineTo(0.0f, 30.162756f);
        mPath.rLineTo(-214.71793f, 0.0f);
        mPath.rLineTo(0.0f, 93.04443f);
        mPath.rLineTo(106.336494f, 0.0f);
        mPath.rLineTo(0.0f, 30.162756f);
        mPath.rLineTo(-106.336494f, 0.0f);
        mPath.rLineTo(0.0f, 93.04443f);
        mPath.rLineTo(214.71793f, 0.0f);
        mPath.rLineTo(0.0f, 30.162756f);
        mPath.rLineTo(-214.71793f, 0.0f);
        mPath.rLineTo(0.0f, 93.04443f);
        mPath.rLineTo(106.336494f, 0.0f);
        mPath.rLineTo(0.0f, 30.162756f);
        mPath.rLineTo(-106.336494f, 0.0f);
        mPath.rLineTo(0.0f, 93.04443f);
        mPath.rLineTo(214.71793f, 0.0f);
        mPath.rLineTo(0.0f, 30.162756f);
        mPath.rLineTo(-214.71793f, 0.0f);
        mPath.rLineTo(0.0f, 93.04443f);
        mPath.rLineTo(106.336494f, 0.0f);
        mPath.rLineTo(0.0f, 30.162756f);
        mPath.rLineTo(-106.336494f, 0.0f);
        mPath.lineTo(337.6695f, 992.3035f);
        mPath.lineTo(337.6695f, 992.3035f);
        mPath.close();
        mPath.moveTo(337.6695f, 992.3035f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}