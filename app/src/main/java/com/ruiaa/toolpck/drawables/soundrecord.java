package com.ruiaa.toolpck.drawables;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class soundrecord extends SVGRenderer {

    public soundrecord(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = (int)128.0f;
        mHeight = (int)128.0f;
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        
        final float scaleX = w / 1024.0f;
        final float scaleY = h / 1024.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(512.0f, 954.41724f);
        mPath.rCubicTo(-16.990976f, 0.0f, -30.776957f, -13.785981f, -30.776957f, -30.776957f);
        mPath.lineTo(481.22305f, 815.92194f);
        mPath.rCubicTo(0.0f, -16.990976f, 13.785981f, -30.776957f, 30.776957f, -30.776957f);
        mPath.rCubicTo(16.990976f, 0.0f, 30.776957f, 13.784958f, 30.776957f, 30.776957f);
        mPath.rLineTo(0.0f, 107.71935f);
        mPath.cubicTo(542.777f, 940.63226f, 528.99097f, 954.41724f, 512.0f, 954.41724f);
        mPath.close();
        mPath.moveTo(512.0f, 954.41724f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(512.0f, 733.84973f);
        mPath.rCubicTo(-98.281395f, 0.0f, -178.24971f, -79.96831f, -178.24971f, -178.24971f);
        mPath.lineTo(333.7503f, 242.70163f);
        mPath.rCubicTo(0.0f, -98.281395f, 79.967285f, -178.24971f, 178.24971f, -178.24971f);
        mPath.rCubicTo(98.28241f, 0.0f, 178.24971f, 79.967285f, 178.24971f, 178.24971f);
        mPath.rLineTo(0.0f, 312.89838f);
        mPath.cubicTo(690.2497f, 653.88245f, 610.2814f, 733.84973f, 512.0f, 733.84973f);
        mPath.close();
        mPath.moveTo(512.0f, 733.84973f);
        mPath.moveTo(512.0f, 126.00685f);
        mPath.rCubicTo(-64.339355f, 0.0f, -116.69579f, 52.356438f, -116.69579f, 116.69579f);
        mPath.rLineTo(0.0f, 312.89838f);
        mPath.rCubicTo(0.0f, 64.339355f, 52.356438f, 116.69579f, 116.69579f, 116.69579f);
        mPath.rCubicTo(64.339355f, 0.0f, 116.69579f, -52.356438f, 116.69579f, -116.69579f);
        mPath.lineTo(628.6958f, 242.70163f);
        mPath.cubicTo(628.6958f, 178.3633f, 576.3383f, 126.00685f, 512.0f, 126.00685f);
        mPath.close();
        mPath.moveTo(512.0f, 126.00685f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(512.0f, 841.5691f);
        mPath.rCubicTo(-149.89696f, 0.0f, -271.8628f, -121.96582f, -271.8628f, -271.8628f);
        mPath.rLineTo(0.0f, -84.636635f);
        mPath.rCubicTo(0.0f, -16.990976f, 13.785981f, -30.776957f, 30.776957f, -30.776957f);
        mPath.rCubicTo(16.990976f, 0.0f, 30.776957f, 13.785981f, 30.776957f, 30.776957f);
        mPath.rLineTo(0.0f, 84.636635f);
        mPath.rCubicTo(0.0f, 115.97436f, 94.3345f, 210.30887f, 210.30887f, 210.30887f);
        mPath.rCubicTo(115.974365f, 0.0f, 210.30887f, -94.3345f, 210.30887f, -210.30887f);
        mPath.rLineTo(0.0f, -84.636635f);
        mPath.rCubicTo(0.0f, -16.990976f, 13.784958f, -30.776957f, 30.776957f, -30.776957f);
        mPath.rCubicTo(16.990976f, 0.0f, 30.776957f, 13.785981f, 30.776957f, 30.776957f);
        mPath.rLineTo(0.0f, 84.636635f);
        mPath.cubicTo(783.8628f, 719.6033f, 661.897f, 841.5691f, 512.0f, 841.5691f);
        mPath.close();
        mPath.moveTo(512.0f, 841.5691f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(602.40704f, 959.54706f);
        mPath.lineTo(421.59296f, 959.54706f);
        mPath.rCubicTo(-16.990976f, 0.0f, -30.776957f, -13.784958f, -30.776957f, -30.776957f);
        mPath.rCubicTo(0.0f, -16.992004f, 13.784958f, -30.776957f, 30.776957f, -30.776957f);
        mPath.rLineTo(180.81412f, 0.0f);
        mPath.rCubicTo(16.990976f, 0.0f, 30.776957f, 13.784958f, 30.776957f, 30.776957f);
        mPath.cubicTo(633.1841f, 945.7621f, 619.398f, 959.54706f, 602.40704f, 959.54706f);
        mPath.close();
        mPath.moveTo(602.40704f, 959.54706f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-13882324, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}